name: "Cleanup GitHub self hosted runner"
description: "Cleanup a GitHub self hosted runner on AWS"

inputs:
  aws_region:
    description: "AWS region code"
    required: true
  iam_role_arn:
    description: "ARN of the IAM role to assume"
    required: true
  ecs_cluster_name:
    description: "ECS cluster"
    required: true
  pat_token:
    description: "GitHub PAT token to access APIs to manage self hosted runner"
    required: true
  environment:
    description: "Target environment on which the Github Runner will execute tasks"
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.iam_role_arn }}
    - uses: actions/checkout@v4
    - name: Download ecs_task_id artifact
      uses: actions/download-artifact@v4
      with:
        path: ${{ matrix.index }}_${{ inputs.environment }}_ecs_task_id
        name: ${{ matrix.index }}_${{ inputs.environment }}_ecs_task_id
        merge-multiple: true
    - name: Get ECS Task Id
      id: get_ecs_task_id
      env:
        index: ${{ matrix.index }}
        environment: ${{ inputs.environment }}
      shell: bash
      run: |
        set -eou pipefail

        if [[ -z "$environment" ]]; then
          echo "Error: Environment is required"
          exit 1
        fi

        artifact=$(ls -l ${index}_${environment}_ecs_task_id | grep "${index}_${environment}")

        if [[ -n $artifact ]]; then
          ecs_task_id=$(echo $artifact | awk -F"${index}_${environment}_" '{print $2}')
          echo "ecs_task_id=$ecs_task_id" >> $GITHUB_OUTPUT
        fi
    - name: Cleanup GitHub Runner
      id: cleanup_github_runner
      shell: bash
      env:
        ECS_TASK_ID_ENV: ${{ steps.get_ecs_task_id.outputs.ecs_task_id }}
        ECS_CLUSTER_NAME: ${{ inputs.ecs_cluster_name }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        GITHUB_REPO: ${{ github.repository }}
        MATRIX_INDEX: ${{ matrix.index }}
        PAT_TOKEN: ${{ inputs.pat_token }}
      run: |
        ${{ github.action_path }}/scripts/cleanupGithubRunner.sh
